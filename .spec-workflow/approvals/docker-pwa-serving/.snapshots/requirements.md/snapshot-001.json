{
  "id": "snapshot_1758829397305_00h310bvr",
  "approvalId": "approval_1758829397042_i6o4s03sb",
  "approvalTitle": "docker-pwa-serving requirements v1.0.0",
  "version": 1,
  "timestamp": "2025-09-25T19:43:17.304Z",
  "trigger": "initial",
  "status": "pending",
  "content": "# Requirements Document\n\n## Introduction\nModuPrompt's Docker Compose stack currently exposes only the Fastify API, returning a JSON 404 at `/`. This spec introduces end-to-end delivery of the web PWA when deploying via Compose so evaluators and operators receive the intended offline-first UX without extra manual wiring.\n\n## Alignment with Product Vision\n- **Product Steering**: Supports the vision for a self-hosted, Docker-first prompt studio by ensuring the Docker profile exposes the UI out of the box.\n- **Technical Steering**: Respects the Fastify-based API runtime and leverages approved stack components (`@fastify/static`) instead of introducing a new web server.\n- **Structure Steering**: Keeps runtime changes confined to `apps/api` and Docker artefacts under `deploy/docker`, aligning with the repo organization guidance.\n\n## Requirements\n\n### Requirement 1\n\n**User Story:** As a prompt architect evaluating ModuPrompt via Docker, I want `http://localhost:8080` to serve the compiled PWA shell so that I can use notebook and node views without extra setup.\n\n#### Acceptance Criteria\n\n1. WHEN the Compose stack is started with the `core` profile THEN the `/` route SHALL return the built `index.html` and load static assets without 404s.\n2. IF a user refreshes or deep-links to an internal PWA route (e.g., `/workspace`) THEN the server SHALL return the SPA bundle instead of a JSON 404.\n3. WHEN static assets are requested (JS, CSS, fonts, media) THEN the server SHALL stream the corresponding files from the built `apps/web/dist` directory with correct content types.\n\n### Requirement 2\n\n**User Story:** As an operations engineer maintaining the Docker deployment, I want API endpoints and health probes to behave unchanged so that monitoring and automation remain stable.\n\n#### Acceptance Criteria\n\n1. WHEN `/healthz` or `/readyz` is queried THEN responses SHALL match current behaviour (HTTP 200 JSON) with no additional middleware interference.\n2. IF an unknown API route under `/api/*` is requested THEN the server SHALL continue returning structured JSON 404 responses.\n\n### Requirement 3\n\n**User Story:** As a compliance reviewer, I want deterministic builds and verifiable asset serving so that exported runtime images remain auditable per docker-build-hardening.\n\n#### Acceptance Criteria\n\n1. WHEN the runtime image is rebuilt THEN the `apps/web/dist` bundle included in the image SHALL match the version produced by `pnpm build` and pass existing docker verification scripts.\n2. WHEN tests execute via a new docker smoke test (to be defined in Tasks) THEN the script SHALL fail if `/` returns a non-200 status or missing core assets.\n\n## Non-Functional Requirements\n\n### Code Architecture and Modularity\n- Runtime changes SHALL reuse approved Fastify plugin patterns and keep static serving isolated behind a dedicated module to preserve single-responsibility boundaries.\n- Docker artefact updates SHALL avoid broad refactors, touching only files necessary for static serving per <workspace-hygiene>.\n\n### Performance\n- First byte for `/` on a warm container SHALL remain <=150 ms on local Docker (matching steering performance targets); document measurements in design.\n\n### Security\n- Static file serving SHALL respect existing security headers/CSP configurations; no directory listing or path traversal SHALL be possible.\n\n### Reliability\n- Startup sequencing SHALL ensure static assets are available before health checks report ready; compose health probes SHALL remain green under normal conditions.\n\n### Usability\n- Documentation SHALL note the updated behaviour and any required rebuild commands so users can quickly verify the UI is available after pulling latest images.\n",
  "fileStats": {
    "size": 3703,
    "lines": 58,
    "lastModified": "2025-09-25T19:38:17.998Z"
  },
  "comments": []
}